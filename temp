app.py-----------------------------------------------------------------------------------


from flask import Flask, request, jsonify

app = Flask(__name__)

@app.route('/ask', methods=['POST'])
def ask():
    print("옴")
    # 클라이언트가 보낸 JSON 데이터 확인
    data = request.json
    if not data or 'user_input' not in data:  # 데이터가 없거나 키가 없을 때
        return jsonify({'error': 'Invalid input'}), 400  # 오류 응답 반환

    user_input = data.get('user_input', '')  # 입력값 가져오기
    response = f"당신이 입력한 질문: {user_input}"  # 응답 메시지 생성
    return jsonify({'response': response})  # JSON 형식으로 응답 반환

if __name__ == '__main__':
    app.run(debug=True, port=5500)


index.html------------------------------------------------------------------------------------------



<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Flask AJAX Test</title>
</head>
<body>
  <h1>질문을 입력하세요</h1>
  <form onsubmit="return submitForm();">
    <input type="text" id="user_input" name="user_input" required>
    <button type="submit">질문하기</button>
  </form>
  <p id="response"></p>
  
  <script>
   function submitForm() {
    
    const userInput = document.getElementById('user_input').value;
    
    fetch('/ask', {      
      method: 'POST',
      headers: {
        'Content-Type': 'application/json', // JSON 데이터 형식
      },
      body: JSON.stringify({ user_input: userInput }), // JSON 데이터 전송
    })
      .then(response => {
        if (!response.ok) {
          // HTTP 오류 처리
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json(); // JSON 데이터로 변환
      })
      .then(data => {
        // 서버 응답 데이터 출력
        document.getElementById('response').innerText = data.response;
      })
      .catch(error => {
        console.error('Error:', error);
        document.getElementById('response').innerText = '오류가 발생했습니다.';
      });

    return false; // 폼 새로고침 방지
  }
  </script>
</body>
</html>




--------------------------------------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Flask AJAX Test</title>
</head>
<body>
  <h1>질문을 입력하세요</h1>
  <form onsubmit="return submitForm();">
    <input type="text" id="user_input" name="user_input" required>
    <button type="submit">질문하기</button>
  </form>
  <p id="response"></p>
  
  <script>
   function submitForm() {
    
    const userInput = document.getElementById('user_input').value;
    
    fetch('/ask', {      
      method: 'POST',
      headers: {
        'Content-Type': 'application/json', // JSON 데이터 형식
      },
      body: JSON.stringify({ user_input: userInput }), // JSON 데이터 전송
    })
      .then(response => {
        if (!response.ok) {
          // HTTP 오류 처리
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json(); // JSON 데이터로 변환
      })
      .then(data => {
        // 서버 응답 데이터 출력
        document.getElementById('response').innerText = data.response;
      })
      .catch(error => {
        console.error('Error:', error);
        document.getElementById('response').innerText = '오류가 발생했습니다.';
      });

    return false; // 폼 새로고침 방지
  }
  </script>
</body>
</html>







 

<!-- ------------------------------------------------------------------------------------------------------------------------------ -->

# try:
#     db = pymysql.connect(
#         host='localhost',
#         user='root',
#         passwd='qweasd456',
#         database='myDB',
#         charset='utf8'
#     )
#     print("연결완료")
# except Exception as e:
#     print(e)

# 연결이 성공했으면 커서 생성
#cursor = db.cursor()



# @app.route("/register", methods=["POST"])
# def register():
#     data = request.json

#     if not data:
#         print("잘못된 요청")
#         return jsonify({"response": "잘못된 요청"}), 400  # 반드시 return 필요!
    
#     if request.method == "POST":
        
#         user_Name = data.get('inputName')
#         user_Pw = data.get('inputPw')
#         user_Email = data.get('inputEmail')
        
#         # #비밀번호를 DB에 저장할때 변환해서 저장
#         hashed_password = bcrypt.generate_password_hash(user_Pw).decode("utf-8")
        
#         try:
            
#             cursor.execute("insert into mydb.memberinfo (id, pw, name) values (%s, %s, %s)", (user_Email, hashed_password, user_Name))
#             db.commit()
#             print('회원가입 실패1')
#             return jsonify({"status": "success", "message": "register succes", "redirect": "/"}), 200

        
#         except pymysql.err.IntegrityError:

#             print("이미 존재하는 아이디이거나 쿼리 오류입니다.")
#             return jsonify({"status": "fail","message": "register fail1"})
        
#     else:
#         print('회원가입 실패2')
#         return jsonify({"status": "fail","message": "register fail2, method not post"})
